# Adds print macros such as start print and end print.
# in cura, as start gcode you can define "START_PRINT" and end gcode "END_PRINT"


######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro START_PRINT]
default_parameter_T_BED: 60
default_parameter_T_EXTRUDER: 190
gcode:
    BEEPS
    M117 Homing
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Use the bed mesh 
    BED_MESH_PROFILE LOAD=cr10s
    # Move the nozzle near the bed
    G1 X15 Y20 Z5 F6000

    BEEPS
    M117 Waiting for temperature
    # Start bed heating and continue
    M140 S{T_BED}
    {% if printer.heater_bed.temperature < params.T_BED|float*0.85 %}
        M190 S{params.T_BED|float*0.85} # wait till 0.85 of bed temp is reached, then continue  
    {% endif %}
    
    M140 S{T_BED} 
    M109 S{T_EXTRUDER}
    M190 S{T_BED}
    
    BEEPS
    # Prime line
    PRIME_LINE
    M117 Printing...

[gcode_macro END_PRINT]
gcode:
    M117 Done printing :)
    # move z up
    G91
    G1 E-3 Z+10 F3000
    # absolute xy 
    G90
    G1 X10 Y220 F2000
    #disable hotend and heated bed
    M104 S0
    M140 S0
    # disable steppers
    M84
    BED_MESH_CLEAR

# prime the nozzle 
[gcode_macro PRIME_LINE]
gcode: 
    M117 Prime Line
    G92 E0 ;Reset Extruder
    # move z axis 
    G1 Z2.0 F3000 ;Move Z Axis up
    # move to prime position 
    G1 X20 Y30 Z0.28 F5000.0 ;Move to start position
    G1 X20 Y200.0 Z0.28 F1500.0 E15 ;Draw the first line
    G1 X22 Y200.0 Z0.28 F5000.0 ;Move to side a little
    G1 X22 Y50 Z0.28 F1500.0 E30 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up

# G29 that does (1) home all (2) get bed mesh (3) move nozzle to corner so it doesnt ooze on the bed while heating up.
[gcode_macro G29]
gcode:
    G28
    BED_MESH_CALIBRATE
    G0 X0 Y0 Z10 F6000
    BED_MESH_PROFILE save=cr10s

# Park toolhead
[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking toolhead
    G91
    G1 Z20 F300 # move up 5 mm
    G90
    G1 X125 Y0 F4000 # move to park position
    RESTORE_GCODE_STATE name=parking

# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested! 
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro LOW_TEMP_CHECK T]
variable_parameter_T: 200
gcode: 
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M109 {printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < params.T %}  # heat to T or 200.
            M109 {params.T}
        {% endif %}
    {% endif %}

# load filament
[gcode_macro M701]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    M117 Loading Filament
    M83
    G92 E0.0
    LOW_TEMP_CHECK
    G1 E70 F6000  # length of bowden tube till cold-end (~70mm) 
    G1 E100 F200  # some extra to prime the nozzle --> slower 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=loading_filament
    
# unload filament
[gcode_macro M702]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    M125 # park
    M117 Unloading Filament 
    G91 # set relative
    G1 E10 F100 
    G92 E0.0
    LOW_TEMP_CHECK
    G1 E170 F6000 # the E is the length of the bowden tube (70mm) + 100 mm. 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=unloading_filament

# filament change --> retract setting set to length of bowden in M702 unload. This function is requires you to type resume manually.
# room for improvement ;)
[gcode_macro M601]
gcode:
    M117 Filament Change
    SAVE_GCODE_STATE NAME=filament_change
    PAUSE
    G91 # relative
    G1 E-1 F300 # retract 1
    M125 # park
    M702 # unload
    {% if printer.pause_resume.is_paused %} 
        # wait for a bit 
        G4 P10000 # ten seconds
        M701 # load
        G4 P10000 
        RESUME
    {% endif %}
    RESTORE_GCODE_STATE NAME=filament_change
    
# kevin's m600
[gcode_macro M600]
default_parameter_X: 50
default_parameter_Y: 0
default_parameter_Z: 10
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-420 F1000
    RESTORE_GCODE_STATE NAME=M600_state
    
# Beeper
# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.

[output_pin BEEPER_pin]
pin: ar37
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000

[gcode_macro M300]
default_parameter_S: 1000
#   Use a default 1kHz tone if S is omitted.
default_parameter_P: 100
#   Use a 10ms duration is P is omitted.
gcode:
    SET_PIN PIN=BEEPER_pin VALUE={S}
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0
    

[gcode_macro BEEPS]
gcode:
   M300 S1000 P100
   M300 S500 P100
   M300 S1000 P100

#unknown gcode
[gcode_macro m108]
gcode:
   G4

[gcode_macro m201]
gcode:
   G4

[gcode_macro m203]
gcode:
   G4

[gcode_macro m205]
gcode:
   G4

[gcode_macro m900]
gcode:
   G4
